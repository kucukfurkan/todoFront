# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - dockerize
  - test
  - acceptance
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: node:lts
  script:
    - echo "Compiling the code..."
    - cd todo/
    - npm install
    - npm run build
    - echo "Compile complete."

dockerize-job:
  image: docker:stable
  stage: dockerize
  services:
    - docker:dind
  script:
    - cd todo
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker build -t furkannkck/todo-frontend:latest .
    - docker push furkannkck/todo-frontend:latest
    - docker logout

unit-test-job:   # This job runs in the test stage.
  stage: test 
  image: node:lts   # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - cd todo/
    - npm i flush-promises
    - npm install
    - npm run test:unit

lint-test-job:   # This job also runs in the test stage.
  stage: test
  image: node:lts     # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 3
    - cd todo/
    - npm install
    - npm run lint
    - echo "No lint issues found."

acceptance-job:
  stage: acceptance
  trigger:
    project: furkan.moda/todo-acceptance-test
    strategy: depend

image: node:lts
cache: 
  paths:
    - todo/node_modules/


deploy-job:      # This job runs in the deploy stage.
    stage: deploy
    image: alpine:3.11
    before_script:
      - apk update && apk add openssh-client bash
      - mkdir -p ~/.ssh
      - eval $(ssh-agent -s)
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
      - touch ~/.ssh/config
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - ssh-keyscan -H $STAGING_HOST >> ~/.ssh/known_hosts
    script:
      - ssh ec2-user@$STAGING_HOST "cd frontend && docker-compose down && docker-compose pull && docker-compose up -d && exit"
